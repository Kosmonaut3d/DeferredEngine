Rendering ideas:

Screen Space Emissive

- draw Diffuse to the SSAO buffer at half or quarter res (and then upscale to half) -> perform bilateral blur on both things in one pass

Screen Space Ambient Occlusion

- use second color for screen space reflection occlusion (rays = reflect(viewDir, normal)) to cut cubemap reflections from these areas.

Light View Space Global Illumination

- have a projector calculate global illumination in its view space - then project onto screen space.

- blur the VSM shadows once per frame until blurred enough...

TODO:

- Integrate the physics system better into the lighting system so it doesnot update when the position doesn't change any more.

- Integrate LUTs/Color Correction into the post processing step instead of yet another rendertarget usage.

- is lighting using depth buffer? (draw frontside of spheres when camera not inside)

- check out:
https://github.com/kode80/kode80SSR/blob/master/Assets/Resources/Shaders/SSR.shader